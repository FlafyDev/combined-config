diff --git a/lib/modules.nix b/lib/modules.nix
index b9e9ca1e5d78..506a3ef2e503 100644
--- a/lib/modules.nix
+++ b/lib/modules.nix
@@ -473,7 +473,7 @@ let
         else config;
     in
     if m ? config || m ? options then
-      let badAttrs = removeAttrs m ["_class" "_file" "key" "disabledModules" "imports" "options" "config" "meta" "freeformType"]; in
+      let badAttrs = removeAttrs m ["_class" "_file" "key" "disabledModules" "inputs" "imports" "osImports" "hmImports" "options" "config" "meta" "freeformType"]; in
       if badAttrs != {} then
         throw "Module `${key}' has an unsupported attribute `${head (attrNames badAttrs)}'. This is caused by introducing a top-level `config' or `options' attribute. Add configuration attributes immediately on the top level instead, or move all of them (namely: ${toString (attrNames badAttrs)}) into the explicit `config' attribute."
       else
@@ -483,7 +483,7 @@ let
           disabledModules = m.disabledModules or [];
           imports = m.imports or [];
           options = m.options or {};
-          config = addFreeformType (addMeta (m.config or {}));
+          config = addFreeformType (addMeta (m.config or {} // { inherit (m) inputs; }));
         }
     else
       # shorthand syntax
@@ -1405,6 +1405,7 @@ private //
   #       are just needed by types.nix, but are not meant to be consumed
   #       externally.
   inherit
+    collectModules
     defaultOrderPriority
     defaultOverridePriority
     defaultPriority
